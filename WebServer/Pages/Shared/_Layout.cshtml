<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="~/css/boxicons.css" rel="stylesheet" />

    <link href="~/css/PrimeVueTheme.css" rel="stylesheet" />

    <link href="~/css/primevue.min.css" rel="stylesheet" />
    <link href="~/css/primeicons.css" rel="stylesheet" />

    <script src="~/scripts/vue.global.js"></script>
    <script src="~/scripts/primevue_component/api.js"></script>
    <script src="~/scripts/primevue_component/utils.js"></script>
    <script src="~/scripts/primevue_component/config.js"></script>
    <script src="~/scripts/primevue_component/ripple.js"></script>

    <script src="~/scripts/primevue_component/inputtext.js"></script>
    <script src="~/scripts/primevue_component/password.js"></script>
    <script src="~/scripts/primevue_component/button.js"></script>
    <script src="~/scripts/primevue_component/sidebar.js"></script>
    <script src="~/scripts/primevue_component/dialog.js"></script>
    <script src="~/scripts/primevue_component/checkbox.js"></script>
    <script src="~/scripts/primevue_component/calendar.js"></script>
    <script src="~/scripts/primevue_component/datatable.js"></script>
    <script src="~/scripts/primevue_component/column.js"></script>
    <script src="~/scripts/primevue_component/fieldset.js"></script>

    <style>
        body {
            margin: 0px;
        }

        #left-menu-button {
            width: 50px;
            height: 50px;
            background-color: transparent;
        }

        #main-div {
            display: grid;
            margin: 0px;
            grid-template-rows: 50px auto;
            grid-template-columns: auto;
        }

        #top-menu {
            grid-row-start: 0;
            background-color: lightblue;
            display: flex;
            align-items: center;
        }

        #auth-div .p-button {
            margin-left: 5px;
            margin-right: 5px;
        }

        .p-float-label {
            margin: 10px 5px 5px 5px;
        }

        #greeting {
            margin-right: 10px;
            display: flex;
        }

            #greeting p {
                margin-right: 10px;
            }

        #main-content {
            margin: 5px;
        }

        .p-sidebar-content {
            display: flex;
            flex-direction: column
        }

        .tab-div {
            display: flex;
            flex-direction: column;
        }

        .clickable-text {
            text-decoration: underline;
            cursor: pointer;
        }

        .menu-elem-button {
            background-color: transparent;
            color: black;
            text-align: left;
        }

        .tab-div h1 {
            text-align: center
        }

        #person-div {
            align-items: center;
        }

            #person-div input {
                width: 350px;
            }

            #person-div .p-datatable-table {
                width: 500px;
            }
    </style>
</head>
<body>
    <div id="body-div">
        <p-side-bar v-model:visible="leftMenu">
            <h2>Меню</h2>
            <p-button class="menu-elem-button" label="Данные о физическом лице" @@click="switchTab(1)"></p-button>
            <p-button class="menu-elem-button" label="Данные о вступительных экзаменах" @@click="switchTab(2)"></p-button>
            <p-button class="menu-elem-button" label="Данные об аспиранте" @@click="switchTab(3)"></p-button>
            <p-button class="menu-elem-button" label="Экзамены/зачёты" @@click="switchTab(4)"></p-button>
        </p-side-bar>
        <p-dialog header="Вход" id="login-form" v-model:visible="loginForm"
                  :modal="true">
            <span class="p-float-label">
                <p-inputtext id="loginLogin" type="text" v-model="loginLogin"></p-inputtext>
                <label for="loginLogin">Email или имя пользователя</label>
            </span>
            <span class="p-float-label">
                <p-password id="passwordLogin" v-model="passwordLogin" :feedback="false"></p-password>
                <label for="passwordLogin">Пароль</label>
            </span>
            <p-button label="Вход" style="width: 100%; margin-top: 10px" @@click="login"></p-button>
        </p-dialog>
        <p-dialog id="registration-form"
                  header="Регистрация"
                  v-model:visible="registrationForm"
                  :modal="true">
            <span class="p-float-label">
                <p-inputtext id="emailRegistration" type="text" v-model="emailRegistration"></p-inputtext>
                <label for="emailRegistration">Email</label>
            </span>
            <span class="p-float-label">
                <p-inputtext id="loginRegistration" type="text" v-model="loginRegistration"></p-inputtext>
                <label for="loginRegistration">Имя пользователя</label>
            </span>
            <span class="p-float-label">
                <p-password id="passwordRegistration" v-model="passwordRegistration" :feedback="false"></p-password>
                <label for="passwordRegistration">Пароль</label>
            </span>
            <span class="p-float-label">
                <p-password id="passwordAgainRegistration" v-model="passwordAgainRegistration" :feedback="false"></p-password>
                <label for="passwordAgainRegistration">Пароль (повторно)</label>
            </span>
            <p-button label="Регистрация" style="width: 100%; margin-top: 10px" @@click="registration"></p-button>
        </p-dialog>
        <div id="main-div">
            <div id="top-menu">
                <p-button id="left-menu-button"
                          icon="bx bx-menu bx-md"
                          @@click="leftMenu = true"
                          @Html.Raw(!User.Identity.IsAuthenticated || Context.Request.Path != "/" ? "disabled" : "")></p-button>
                <h2>Аспирант</h2>
                <div style="flex-grow: 1"></div>
                <div id="auth-div" :style="{display: unauth ? '' : 'none'}">
                    <p-button label="Вход" @@click="loginForm = true"></p-button>
                    <p-button label="Регистрация" @@click="registrationForm = true"></p-button>
                </div>
                <div id="greeting" :style="{display: !unauth ? '' : 'none'}">
                    <p-button label="Выход" @@click="logout"></p-button>
                </div>
            </div>

            <div id="main-content">
                @RenderBody()
            </div>
        </div>
    </div>
    <script>
        const App = {
            data: () => {
                return {
                    leftMenu: false,
                    unauth: @Html.Raw(User.Identity.IsAuthenticated ? "false" : "true"),
                    loginForm: false,
                    registrationForm: false,
                    loginLogin: '',
                    passwordLogin: '',
                    emailRegistration: '',
                    loginRegistration: '',
                    passwordRegistration: '',
                    passwordAgainRegistration: '',
                    activeTab: @Html.Raw(User.Identity.IsAuthenticated ? 1 : 0),

                    lastname: '',
                    firstname: '',
                    patronymic: '',
                    birthdate: null,
                    citizenship: '',
                    passport: '',
                    workbook: false,
                    workplaces: '',
                    contacts: '',
                    enducations: []
                }
            },
            components: {
                'p-inputtext': primevue.inputtext,
                'p-password': primevue.password,
                'p-button': primevue.button,
                'p-side-bar': primevue.sidebar,
                'p-dialog': primevue.dialog,
                'p-calendar': primevue.calendar,
                'p-datatable': primevue.datatable,
                'p-column': primevue.column,
                'p-checkbox': primevue.checkbox,
                'p-fieldset': primevue.fieldset
            },
            methods: {
                login() {
                    fetch('/api/Account/Login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        },
                        body: JSON.stringify({
                            login: this.loginLogin,
                            password: this.passwordLogin
                        })
                    }).then(res => {
                        if (res.ok)
                            window.location = window.location;
                    });
                },
                logout() {
                    fetch('/api/Account/Logout', {
                        method: 'POST'
                    }).then(res => {
                        if (res.ok)
                            window.location = location.hostname;
                    });
                },
                registration() {
                    fetch('/api/Account/Registration', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        },
                        body: JSON.stringify({
                            username: this.loginRegistration,
                            email: this.emailRegistration,
                            password: this.passwordRegistration
                        })
                    }).then(res => {
                        if (res.ok)
                            window.location = '/';
                    });
                },
                switchTab(id) {
                    this.activeTab = id;
                    this.leftMenu = false;
                },

                personSave() {
                    fetch('/api/Person/Add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json;charset=utf-8'
                        },
                        body: JSON.stringify({
                            lastname: this.lastname,
                            firstname: this.firstname,
                            patronymic: this.patronymic,
                            birthdate: this.birthdate,
                            citizenship: this.citizenship,
                            passport: this.passport,
                            workbook: this.workbook,
                            workplaces: this.workplaces,
                            contacts: this.contacts,
                        })
                    }).then(res => {
                        if (res.ok)
                            window.location = '/';
                    });
                }
            }
        };
        let vue = Vue.createApp(App);
        vue.use(primevue.config.default);
        vue.mount('#body-div');
    </script>
</body>
</html>
